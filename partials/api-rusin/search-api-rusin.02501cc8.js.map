{"mappings":"YAuEA,IAAMA,EAAW,gCACXC,EAAW,qBACXC,EAAOC,SAASC,cAAc,YAC9BC,EAASF,SAASC,cAAc,aAClCE,EAAc,EAQdC,EAAW,IAAIC,sBAmBnB,SAAgBC,EAASC,GACvBD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,gBAGRC,EAFAR,GAAe,GAGZS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZd,EAAKiB,mBAAmB,YAAaC,EAAaJ,EAAKK,UAEnDL,EAAKM,OAASN,EAAKO,YAAc,GACnCb,EAASc,UAAUnB,E,IAGtBoB,OAAM,SAAAC,G,OAAOT,QAAQC,IAAIQ,E,SAvCpB,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,IAKPC,EAAS,CACbC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA+BN,SAASpB,I,IAAYQ,EAAAa,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcC,OAAXtC,GAA4BsC,OAAjBrC,EAAS,UAAaqC,OAALhB,GAAQQ,GAAQf,MAAK,SAAAwB,GAC/D,IAAKA,EACH,MAAM,IAAIC,MAAMD,EAASE,YAE3B,OAAOF,EAASG,M,IAIpB,SAAStB,EAAauB,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MAAY,+GAE4DT,OAArBQ,EAAY,WACvER,OADgFS,EAAM,sBAChFT,OAANS,EAAM,qB,IAGfC,KAAK,G,CA7CVlC,IACGC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZd,EAAKiB,mBAAmB,YAAaC,EAAaJ,EAAKK,UACvDd,EAAS0C,QAAQ5C,E,IAElBoB,OAAM,SAAAC,G,OAAOT,QAAQC,IAAIQ,E","sources":["src/js/api-rusin/search-api-resin.js"],"sourcesContent":["// import { LoadMoreBtn } from './load-more-btn-rusin';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const ENDPOINT = 'trending/movie/day';\n// const list = document.querySelector('.js-list');\n// let currentPage = 1;\n\n// const loadMoreBtn = new LoadMoreBtn({\n//   selector: '.js-loadMore',\n//   isHidden: true,\n// });\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWExN2Q3MWQzNTAwNzE3Y2EyN2Q2YmQyOTIxNTkwZSIsInN1YiI6IjY0YmQwZmFmYWM2Yzc5MDhkZTVmN2YzMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VC2MsN7ExHveRmeoqTrt5NtUQuxLm3x9qkjt-CjxRZI',\n//   },\n// };\n\n// loadMoreBtn.button.addEventListener('click', onLoad);\n\n// getTrending()\n//   .then(data => {\n//     console.log(data);\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n//     if (data.page !== data.total_pages) {\n//       loadMoreBtn.show();\n//     }\n//   })\n//   .catch(err => console.log(err));\n\n// function onLoad() {\n//   currentPage += 1;\n//   getTrending(currentPage)\n//     .then(data => {\n//       console.log(data);\n//       list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//       if (data.page === data.total_pages / 2) {\n//         loadMoreBtn.hide();\n//       }\n//     })\n//     .catch(err => console.log(err));\n// }\n\n// function getTrending(page = 1) {\n//   return fetch(`${BASE_URL}${ENDPOINT}?page=${page}`, options).then(\n//     responce => {\n//       if (!responce) {\n//         throw new Error(responce.statusText);\n//       }\n//       return responce.json();\n//     }\n//   );\n// }\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({ poster_path, title }) => `\n//       <li class=\"list-item-card\">\n//         <img class=\"list-img-card\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" />\n//         <h2>${title}</h2>\n//       </li>`\n//     )\n//     .join('');\n// }\n\n// !!!!!! INFINITI SCROLL !!!!!!!!!\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ENDPOINT = 'trending/movie/day';\nconst list = document.querySelector('.js-list');\nconst target = document.querySelector('.js-guard');\nlet currentPage = 1;\n\nlet options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nconst option = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWExN2Q3MWQzNTAwNzE3Y2EyN2Q2YmQyOTIxNTkwZSIsInN1YiI6IjY0YmQwZmFmYWM2Yzc5MDhkZTVmN2YzMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VC2MsN7ExHveRmeoqTrt5NtUQuxLm3x9qkjt-CjxRZI',\n  },\n};\n\ngetTrending()\n  .then(data => {\n    console.log(data);\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(target);\n  })\n  .catch(err => console.log(err));\n\nfunction onLoad(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n\n      getTrending(currentPage)\n        .then(data => {\n          console.log(data);\n          list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n          if (data.page === data.total_pages / 2) {\n            observer.unobserve(target);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${ENDPOINT}?page=${page}`, option).then(responce => {\n    if (!responce) {\n      throw new Error(responce.statusText);\n    }\n    return responce.json();\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) => `\n      <li class=\"list-item-card\">\n        <img class=\"list-img-card\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" />\n        <h2>${title}</h2>\n      </li>`\n    )\n    .join('');\n}\n"],"names":["$b564b332acb8eb3d$var$BASE_URL","$b564b332acb8eb3d$var$ENDPOINT","$b564b332acb8eb3d$var$list","document","querySelector","$b564b332acb8eb3d$var$target","$b564b332acb8eb3d$var$currentPage","$b564b332acb8eb3d$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$b564b332acb8eb3d$var$getTrending","then","data","console","log","insertAdjacentHTML","$b564b332acb8eb3d$var$createMarkup","results","page","total_pages","unobserve","catch","err","root","rootMargin","threshold","$b564b332acb8eb3d$var$option","method","headers","accept","Authorization","arguments","length","fetch","concat","responce","Error","statusText","json","arr","map","param","poster_path","title","join","observe"],"version":3,"file":"search-api-rusin.02501cc8.js.map"}